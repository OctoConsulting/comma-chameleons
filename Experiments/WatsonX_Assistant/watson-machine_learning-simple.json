{
  "openapi": "3.0.2",
  "info": {
    "title": "Watson Machine Learning Simplified Score Call",
    "description": "This is the OpenAPI spec to call WastonX Machine Learning to use with Watsonx Assitant",
    "version": "4.0.0",
    "x-last-updated": "2022-02-01"
  },
  "servers": [
    {
      "url": "https://us-south.ml.cloud.ibm.com",
      "description": "WML Public Cloud"
    }
  ],
  "security": [
    {
      "oauth2": []
    }
  ],
  "tags": [
    {
      "name": "Deployments",
      "x-cli-command-group": "Deployment"
    }
  ],
  "paths": {
    "/ml/v4/deployments/{deployment_id}/predictions": {
      "post": {
        "tags": [
          "Deployments"
        ],
        "summary": "Execute a synchronous deployment prediction",
        "description": "Execute a synchronous prediction for the deployment with the specified identifier.\nIf a `serving_name` is used then it must match the `serving_name` that is returned in the `serving_urls`.\n",
        "operationId": "deployments_compute_predictions",
        "parameters": [
          {
            "name": "version",
            "in": "query",
            "description": "The version date for the API of the form `YYYY-MM-DD`.\n",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2022-08-01",
            "x-sdk-global-param": true
          },
          {
            "name": "deployment_id",
            "in": "path",
            "description": "The `deployment_id` can be either the `deployment_id` that identifies the deployment or a `serving_name` that allows a predefined URL to be used to post a prediction.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The scoring data.\n",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deployment_id_predictions_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Scoring response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, the response body should contain the reason.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, an authentication error including trying to access a forbidden space.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "deployment_id_predictions_body": {
        "required": [
          "input_data"
        ],
        "type": "object",
        "properties": {
          "input_data": {
            "title": "input_data",
            "type": "array",
            "description": "The input data.\n",
            "items": {
              "$ref": "#/components/schemas/input_data_array"
            }
          }
        },
        "description": "Scoring data.\n"
      },
      "input_data_array": {
        "title": "input_data_array",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Discriminates the data for multi input data situation. For example\nin cases where multiple tensors are expected.\n"
          },
          "fields": {
            "type": "array",
            "description": "The names of the fields. The order of fields values must be consistent with the order of fields names.\n",
            "example": [
              "name",
              "age",
              "occupation"
            ],
            "items": {
              "type": "string"
            }
          },
          "values": {
            "title": "matrix_or_vector_data",
            "type": "array",
            "description": "Input data as a a vector for a single record or a matrix representing a mini batch of records.\n",
            "items": {
              "type": "array",
              "description": "The record or matrix.\n",
              "items": {
                "description": "The record.\n"
              }
            }
          }
        },
        "description": "The input data.\n"
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "predictions": {
            "type": "array",
            "description": "The predictions.\n",
            "items": {
              "$ref": "#/components/schemas/inline_response_200_predictions"
            }
          }
        },
        "description": "Scoring results.\n"
      },
      "inline_response_200_predictions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Discriminates the data for multi input data situation. For example\nin cases where multiple tensors are expected.\n"
          },
          "type": {
            "type": "string",
            "description": "If specified, the `values` represents the ground truth data (the label information) for the input data provided.\nThis information will be used for computing machine learning metrics.\n",
            "enum": [
              "target"
            ]
          },
          "fields": {
            "type": "array",
            "description": "The names of the fields. The order of fields values must be consistent with the order of fields names.\n",
            "items": {
              "type": "string"
            }
          },
          "values": {
            "title": "input_data",
            "type": "array",
            "description": "Input data as a vector for a single record or a matrix representing a mini batch of records.\n",
            "items": {
              "type": "array",
              "description": "The records.\n",
              "items": {
                "description": "The record.\n"
              }
            }
          },
          "targets": {
            "type": "array",
            "description": "Used when performing evaluation. This contains the groud truths for the input data.\n",
            "items": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        },
        "description": "The payload for scoring.\n"
      },
      "error_errors": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "A simple code that should convey the general sense of the error.\n",
            "example": "missing_field"
          },
          "message": {
            "type": "string",
            "description": "The message that describes the error.\n",
            "example": "The 'name' field is required."
          },
          "more_info": {
            "type": "string",
            "description": "A reference to a more detailed explanation when available.\n",
            "example": "https://cloud.ibm.com/apidocs/machine-learning#models-get"
          }
        }
      },
      "error": {
        "title": "error",
        "required": [
          "errors",
          "trace"
        ],
        "properties": {
          "trace": {
            "type": "string",
            "description": "An identifier that can be used to trace the request.\n",
            "example": "w7vrpmm9479z2o0hxhex0ttgat4qv9ev"
          },
          "errors": {
            "type": "array",
            "description": "The list of errors.\n",
            "items": {
              "$ref": "#/components/schemas/error_errors"
            }
          }
        },
        "description": "The data returned when an error is encountered.\n"
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "x-apikey": {
            "tokenUrl": "https://iam.cloud.ibm.com/identity/token",
            "grantType": "urn:ibm:params:oauth:grant-type:apikey",
            "secretKeys": [
              "apikey"
            ],
            "paramKeys": [],
            "scopes": {}
          }
        }
      }
    }
  }
}